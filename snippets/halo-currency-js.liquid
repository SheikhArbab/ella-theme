{% liquid
    if settings.enable_currencies
        if settings.currency_type == 'shopify_payment'
            assign enable_shopify_payments_currencies = true
            assign enable_multiple_currencies = false
            assign enable_auto_currency = false 
        elsif settings.currency_type == 'multiple_currencies'
            assign enable_shopify_payments_currencies = false
            assign enable_multiple_currencies = true
            assign enable_auto_currency = false 
        elsif settings.currency_type == 'auto_currencies'
            assign enable_shopify_payments_currencies = false
            assign enable_multiple_currencies = false
            assign enable_auto_currency = true 
        endif
    else 
        assign enable_shopify_payments_currencies = false
        assign enable_multiple_currencies = false
        assign enable_auto_currency = false 
    endif
%}

<script>
    window.show_auto_currency = {{ enable_auto_currency }};
</script>

{%- if enable_shopify_payments_currencies -%}
    {{ "//cdn.shopify.com/s/javascripts/currencies.js" | script_tag }}
    {%- if settings.currency_format_enable -%}
        {{ "jquery.currencies-format.min.js" | asset_url | script_tag }}
    {%- else -%}
        {{ "jquery.currencies.min.js" | asset_url | script_tag }}
    {%- endif -%}
    
    <script>
        var shopCurrency = '{{ shop.currency }}';
        var currencyItem = $('.dropdown-item[data-currency]');
        currencyItem.on('click', function(e) {
            e.preventDefault();
  
            var $target = $(event.currentTarget),
                label = $('[data-currency-label]');
                cur = $(this).attr('data-currency');
  
            
            if($(this).hasClass('active')){
                return false;
            }
  
            currencyItem.removeClass('active');
            $(`[data-currency="${cur}"]`).addClass('active');

            if (label.length && label.is(':visible')){
                var item = $(this).html();
                label.html(item);
            }
            
            $('#currency_form option').filter(function() {
                return ($(this).text() == cur); 
            }).prop('selected', true);

            $('#currency_form').submit();
            
        });
    </script>
{%- else -%}
    {%- if enable_multiple_currencies -%}
        {{ "//cdn.shopify.com/s/javascripts/currencies.js" | script_tag }}
        {%- if settings.currency_format_enable -%}
            {{ "jquery.currencies-format.min.js" | asset_url | script_tag }}
        {%- else -%}
            {{ "jquery.currencies.min.js" | asset_url | script_tag }}
        {%- endif -%}

        {%- if enable_auto_currency == false -%}
            <script>
                // Pick your format here:  
                // Can be 'money_format' or 'money_with_currency_format'
                Currency.format = 'money_format';
                var shopCurrency = '{{ shop.currency }}';
                if (shopCurrency != '{{cart.currency.iso_code}}') {
                    window.location = window.location.href + '?currency=' + shopCurrency;
                }
                /* Sometimes merchants change their shop currency, let's tell our JavaScript file */
                Currency.moneyFormats[shopCurrency].money_with_currency_format = {{ shop.money_with_currency_format | strip_html | json }};
                Currency.moneyFormats[shopCurrency].money_format = {{ shop.money_format | strip_html | json }};
                window.currencyFormatted = {{ shop.money_with_currency_format | json }}.includes('money');

                var cookieCurrency = Currency.cookie.read();

                // Fix for customer account pages 
                $('span.money span.money').each((index, element) => {
                    $(element).parent('span.money').removeClass('money');
                });

                // Add precalculated shop currency to data attribute 
                $('span.money').each((index, element) => {
                    $(element).attr('data-currency-{{ shop.currency }}', $(element).html());
                });

                // Select all your currencies buttons.
                var currencySwitcher = $('.currency-menu'),
                    currencyItem = $('.dropdown-item[data-currency]');

                // When the page loads.
                if (cookieCurrency == null || cookieCurrency == shopCurrency) {
                    Currency.currentCurrency = shopCurrency;
                } else {
                    var flag = 0;
                    currencyItem.each((index, element) => {
                        if (cookieCurrency == $(element).data('currency')) {
                            flag = 1;
                        }
                    });

                    if (flag == 0) {
                        cookieCurrency = shopCurrency;
                    }

                    Currency.currentCurrency = cookieCurrency;
                    currencySwitcher.find('.active').removeClass('active').parent().find('[data-currency=' + Currency.currentCurrency + ']').addClass('active');
                    Currency.convertAll(shopCurrency, cookieCurrency);
                }

                var active_currency_label = $('[data-currency-label]'),
                    active_currency = currencySwitcher.find('.active[data-currency]').html();
                    active_currency_label.html(active_currency);

                currencyItem.on('click', (event) => {
                    event.preventDefault();

                    var $target = $(event.currentTarget),
                        label = $('[data-currency-label]'),
                        cur = $target.attr('data-currency');

                    if ($target.hasClass('active')){
                        return false;
                    }

                    currencyItem.removeClass('active');
                    $(`[data-currency="${cur}"]`).addClass('active');

                    if (label.length && label.is(':visible')){
                        var item = $target.html();

                        label.html(item);
                    }

                    cur != Currency.currentCurrency && Currency.convertAll(Currency.currentCurrency, cur);
                });

                $('body').on('refreshCurrency', () => {
                    Currency.convertAll(shopCurrency, $("#currencies .active").attr('data-currency'));
                });
            </script>
        {%- else -%}
            <script>
                // Pick your format here:  
                // Can be 'money_format' or 'money_with_currency_format'
                    Currency.format = 'money_format';
                var shopCurrency = '{{ shop.currency }}';
                if (shopCurrency != '{{cart.currency.iso_code}}') {
                    window.location = window.location.href + '?currency=' + shopCurrency;
                }

                /* Sometimes merchants change their shop currency, let's tell our JavaScript file */
                Currency.moneyFormats[shopCurrency].money_with_currency_format = {{ shop.money_with_currency_format | strip_html | json }};
                Currency.moneyFormats[shopCurrency].money_format = {{ shop.money_format | strip_html | json }};
                window.currencyFormatted = {{ shop.money_with_currency_format | json }}.includes('money');

                var cookieCurrency = Currency.cookie.read();

                // Fix for customer account pages 
                $('span.money span.money').each((index, element) => {
                    $(element).parent('span.money').removeClass('money');
                });

                // Add precalculated shop currency to data attribute 
                $('span.money').each((index, element) => {
                    $(element).attr('data-currency-{{ shop.currency }}', $(element).html());
                });

                // Select all your currencies buttons.
                var currencySwitcher = $('.currency-menu'),
                    currencyItem = $('.dropdown-item[data-currency]');

                if (cookieCurrency == null) {
                    $.getScript('https://ssl.geoplugin.net/javascript.gp?k=9247556ec91c71e9', function() {
                        var newCurrency = geoplugin_currencyCode(),
                            flag = 0;

                        currencyItem.on('click', (event) => {
                            event.preventDefault();

                            var $target = $(event.currentTarget),
                                label = $('[data-currency-label]'),
                                cur = $target.attr('data-currency');

                            if ($target.hasClass('active')){
                                return false;
                            }

                            currencyItem.removeClass('active');
                            $(`[data-currency="${cur}"]`).addClass('active');

                            if (label.length && label.is(':visible')){
                                var item = $target.html();

                                label.html(item);
                            }
                        });

                        // When the page loads.
                        if (cookieCurrency == null || cookieCurrency == shopCurrency) {
                            Currency.currentCurrency = shopCurrency;
                        } else {
                            if (flag == 0 && newCurrency != shopCurrency) {
                                cookieCurrency = shopCurrency;
                            }

                            Currency.currentCurrency = cookieCurrency;
                            currencySwitcher.find('.active').removeClass('active').parent().find('[data-currency=' + Currency.currentCurrency + ']').addClass('active');
                            Currency.convertAll(shopCurrency, cookieCurrency);
                        }
                    });
                } else if (cookieCurrency == shopCurrency) {
                    Currency.currentCurrency = shopCurrency;
                } else {
                    var flag = 0;

                    currencyItem.each((index, element) => {
                        if (cookieCurrency == $(element).data('currency')) {
                            flag = 1;
                        }
                    });

                    if (flag == 0) {
                        cookieCurrency = shopCurrency;
                    }

                    Currency.currentCurrency = cookieCurrency;
                    currencySwitcher.find('.active').removeClass('active').parent().find('[data-currency=' + Currency.currentCurrency + ']').addClass('active');
                    Currency.convertAll(shopCurrency, cookieCurrency);
                }

                currencyItem.on('click', (event) => {
                    event.preventDefault();
                    var $target = $(event.currentTarget),
                        label = $('[data-currency-label]'),
                        cur = $target.attr('data-currency');

                    if ($target.hasClass('active')){
                        return false;
                    }

                    currencyItem.removeClass('active');
                    $target.addClass('active');

                    if (label.length && label.is(':visible')){
                        var item = $target.html();

                        label.html(item);
                    }
                    cur != Currency.currentCurrency && Currency.convertAll(Currency.currentCurrency, cur);
                });

                $('body').on('refreshCurrency', () => {
                    Currency.convertAll(shopCurrency, $("#currencies .active").attr('data-currency'));
                });

                document.addEventListener('DOMContentLoaded', initBlocked, false);

                function initBlocked() {
                    adsBlocked((blocked) => {
                        if (blocked) {
                            alert('Please turn off the uBlock addon on the browser for this site to display your currency!');
                        } else {
                            console.log('Ads are not blocked!');
                        }
                    })
                }

                function adsBlocked(callback) {
                    var testURL = 'https://ssl.geoplugin.net/javascript.gp?k=9247556ec91c71e9'
                    var myInit = {
                        method: 'HEAD',
                        mode: 'no-cors'
                    };

                    var myRequest = new Request(testURL, myInit);

                    fetch(myRequest).then((response) => {
                        return response;
                    }).then((response) => {
                        callback(false)
                    }).catch(() => {
                        callback(true)
                    });
                }
            </script>
        {%- endif -%}
    {%- else -%}
        {%- if enable_auto_currency -%}
            <div id="currencies" style="display: none;">
                <a class="dropdown-item active " href="#" data-currency="{{ shop.currency }}"><span class="text">{{ shop.currency }}</span></a>
            </div>
            {{ "//cdn.shopify.com/s/javascripts/currencies.js" | script_tag }}
            {%- if settings.currency_format_enable -%}
                {{ "jquery.currencies-format.min.js" | asset_url | script_tag }}
            {%- else -%}
                {{ "jquery.currencies.min.js" | asset_url | script_tag }}
            {%- endif -%}
            <script>
                // Pick your format here:  
                // Can be 'money_format' or 'money_with_currency_format'
                Currency.format = 'money_format';
                var shopCurrency = '{{ shop.currency }}';

                if (shopCurrency != '{{cart.currency.iso_code}}') {
                    window.location = window.location.href + '?currency=' + shopCurrency;
                }

                /* Sometimes merchants change their shop currency, let's tell our JavaScript file */
                Currency.moneyFormats[shopCurrency].money_with_currency_format = {{ shop.money_with_currency_format | strip_html | json }};
                Currency.moneyFormats[shopCurrency].money_format = {{ shop.money_format | strip_html | json }};
                window.currencyFormatted = {{ shop.money_with_currency_format | json }}.includes('money');

                var cookieCurrency = Currency.cookie.read();

                // Fix for customer account pages 
                $('span.money span.money').each((index, element) => {
                    $(element).parent('span.money').removeClass('money');
                });

                // Add precalculated shop currency to data attribute 
                $('span.money').each((index, element) => {
                    $(element).attr('data-currency-{{ shop.currency }}', $(element).html());
                });

                var currencyCode = shopCurrency;

                // When the page loads.
                $.getScript('https://ssl.geoplugin.net/javascript.gp?k=9247556ec91c71e9', function() {
                    var newCurrency = geoplugin_currencyCode();

                    if (newCurrency == null || newCurrency == shopCurrency) {
                        Currency.currentCurrency = shopCurrency;

                        $('#currencies .active').attr('data-currency', shopCurrency);
                    } else {
                        try {
                            $('#currencies .active').attr('data-currency', newCurrency);
                            currencyCode = newCurrency;
                            Currency.currentCurrency = newCurrency;
                            Currency.convertAll(shopCurrency, newCurrency);
                        } catch (e) {
                            console.log(e);
                        }

                        $(document).ajaxComplete(function(event, xhr, settings) {
                            try {
                                Currency.convertAll(shopCurrency, currencyCode);
                            } catch (e) {
                                console.log(e);
                            }
                        });
                    }
                });

                document.addEventListener('DOMContentLoaded', initBlocked, false);

                function initBlocked() {
                    adsBlocked((blocked) => {
                        if (blocked) {
                            alert('Please turn off the uBlock addon on the browser for this site to display your currency!');
                        } else {
                            console.log('Ads are not blocked!');
                        }
                    })
                }

                function adsBlocked(callback) {
                    var testURL = 'https://ssl.geoplugin.net/javascript.gp?k=9247556ec91c71e9'

                    var myInit = {
                        method: 'HEAD',
                        mode: 'no-cors'
                    };

                    var myRequest = new Request(testURL, myInit);

                    fetch(myRequest).then((response) => {
                        return response;
                    }).then((response) => {
                        callback(false)
                    }).catch(() => {
                        callback(true)
                    });
                }
            </script>
        {%- endif -%}
    {%- endif -%}
{%- endif -%}